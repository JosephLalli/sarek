/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
        ext.when   = When to run the module.
----------------------------------------------------------------------------------------
*/

// HAPLOTYPECALLER

process {

    withName: 'GATK4_HAPLOTYPECALLER' {
        ext.args         = [ { params.joint_germline ? "-ERC GVCF" : ""          }, 
                             { params.dragen_mode    ? "--dragen-mode true" : "" } ].join(' ').trim()
        ext.prefix       = { meta.num_intervals <= 1 ? ( params.joint_germline ? "${meta.id}.haplotypecaller.g" : "${meta.id}.haplotypecaller" ) : ( params.joint_germline ? "${meta.id}.haplotypecaller.${intervals.simpleName}.g" :"${meta.id}.haplotypecaller.${intervals.simpleName}" ) }
        ext.when         = { params.tools && params.tools.split(',').contains('haplotypecaller') }
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/"},
            pattern: "*{vcf.gz,vcf.gz.tbi}",
            saveAs: { meta.num_intervals > 1 ? null : "haplotypecaller/${meta.id}/${it}" }
        ]
    }

    withName: 'MERGE_HAPLOTYPECALLER' {
        ext.prefix       = { params.joint_germline ? "${meta.id}.haplotypecaller.g" : "${meta.id}.haplotypecaller" }
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/haplotypecaller/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    if (params.dragen_mode) {
        withName: 'DRAGENFILTER' {
            ext.prefix   = {"${meta.id}.haplotypecaller"}
            // filter per recommendation at https://gatk.broadinstitute.org/hc/en-us/articles/4407897446939--How-to-Run-germline-single-sample-short-variant-discovery-in-DRAGEN-mode
            ext.args     = { "--filter-expression \"QUAL < 10.4139\" --filter-name \"DRAGENHardQUAL\" " }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/haplotypecaller/${meta.id}/"},
                pattern: "*{vcf.gz,vcf.gz.tbi}"
            ]
        }
    } else {
        withName: 'CNNSCOREVARIANTS' {
            publishDir       = [
                // Otherwise it gets published
                enabled: false
            ]
        }

        withName: 'FILTERVARIANTTRANCHES' {
            ext.prefix       = {"${meta.id}.haplotypecaller"}
            ext.args         = { "--info-key CNN_1D" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/haplotypecaller/${meta.id}/"},
                pattern: "*{vcf.gz,vcf.gz.tbi}"
            ]
        }
    }

    if (params.tools && params.tools.split(',').contains('haplotypecaller')) {
        withName: 'NFCORE_SAREK:SAREK:BAM_VARIANT_CALLING_GERMLINE_ALL:BAM_VARIANT_CALLING_HAPLOTYPECALLER:BAM_MERGE_INDEX_SAMTOOLS:(MERGE_BAM|INDEX_MERGE_BAM)' {
            ext.prefix       = { "${meta.id}.realigned" }
            publishDir       = [
                enabled: true,
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/haplotypecaller/${meta.id}/" },
                pattern: "*{bam,bai}"
            ]
        }
    }
}
